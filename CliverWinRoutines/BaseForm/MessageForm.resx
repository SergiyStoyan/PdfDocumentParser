<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="image_box.InitialImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        YII=
</value>
  </data>
</root>